name: 'Setup Java and Gradle'

inputs:
  default-java-version:
    description: 'Default Java version'
    required: true
  jdk-src:
    description: 'JDK source URL'
    required: true
  gradle-java-version:
    description: 'Gradle Java version'
    required: true

outputs:
  java-version:
    description: "Java version"
    value: ${{ steps.java-version.outputs.java-version }}

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v5
    - uses: gradle/actions/setup-gradle@v4

    - name: Extract Java version from branch
      id: java-version
      shell: bash
      run: |
        if [ "${{ github.ref_type }}" = "tag" ]; then
          TAG_NAME="${{ github.ref_name }}"
          echo "Tag: $TAG_NAME"
        
          JAVA_VERSION=$(echo "$TAG_NAME" | grep -oE '^[0-9]+')
        
          if [ -z "$JAVA_VERSION" ]; then
            echo "❌ Error: Could not extract Java version from tag '$TAG_NAME'"
            echo "Tags should start with a number (e.g., 21.0.3, 25.1.0)"
            exit 1
          fi
        else 
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            BRANCH_NAME="${{ github.head_ref }}"
          else
            BRANCH_NAME="${{ github.ref_name }}"
          fi
          echo "Branch: $BRANCH_NAME"
        
          # Extract Java version from branch name (e.g., java-21, java-25)
          JAVA_VERSION=$(echo "$BRANCH_NAME" | grep -oE 'java-([0-9]+)' | grep -oE '[0-9]+' || true)
        
          # Fallback to default if no version found in branch name
          if [ -z "$JAVA_VERSION" ]; then
            JAVA_VERSION="${{ inputs.default-java-version }}"
            echo "No Java version found in branch name, using default: $JAVA_VERSION"
          fi
        fi
        
        echo "java-version=$JAVA_VERSION" >> $GITHUB_OUTPUT
        echo "Downloading JDK $JAVA_VERSION from ${{ inputs.jdk-src }}."

    - uses: oracle-actions/setup-java@v1
      if: ${{ inputs.gradle-java-version != steps.java-version.outputs.java-version }}
      with:
        website: ${{ inputs.jdk-src }}
        release: ${{ inputs.gradle-java-version }}

    - run: |
        printf "org.gradle.java.home=%s" "$JAVA_HOME" > gradle.properties
        java --version
      shell: bash
      if: ${{ inputs.gradle-java-version != steps.java-version.outputs.java-version }}

    - uses: oracle-actions/setup-java@v1
      with:
        website: ${{ inputs.jdk-src }}
        release: ${{ steps.java-version.outputs.java-version }}

    - run: printf "org.gradle.java.home=%s" "$JAVA_HOME" > gradle.properties
      shell: bash
      if: ${{ inputs.gradle-java-version == steps.java-version.outputs.java-version }}

    - name: Set Java Home
      shell: bash
      run: |
        printf "\norg.gradle.java.installations.paths=%s" "$JAVA_HOME" >> gradle.properties
        java --version
